//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Idea.Facade.ModelService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ModelService.IModelService")]
    public interface IModelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetAll", ReplyAction="http://tempuri.org/IModelService/GetAllResponse")]
        System.Collections.Generic.List<Idea.Entities.Model> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetAll", ReplyAction="http://tempuri.org/IModelService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Model>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/Get", ReplyAction="http://tempuri.org/IModelService/GetResponse")]
        Idea.Entities.Model Get(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/Get", ReplyAction="http://tempuri.org/IModelService/GetResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Model> GetAsync(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/Save", ReplyAction="http://tempuri.org/IModelService/SaveResponse")]
        Idea.Entities.Model Save(Idea.Entities.Model model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/Save", ReplyAction="http://tempuri.org/IModelService/SaveResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Model> SaveAsync(Idea.Entities.Model model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetByRegion", ReplyAction="http://tempuri.org/IModelService/GetByRegionResponse")]
        System.Collections.Generic.List<Idea.Entities.Model> GetByRegion(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetByRegion", ReplyAction="http://tempuri.org/IModelService/GetByRegionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Model>> GetByRegionAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/Delete", ReplyAction="http://tempuri.org/IModelService/DeleteResponse")]
        void Delete(Idea.Entities.Model model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/Delete", ReplyAction="http://tempuri.org/IModelService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Idea.Entities.Model model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetByName", ReplyAction="http://tempuri.org/IModelService/GetByNameResponse")]
        System.Collections.Generic.List<Idea.Entities.Model> GetByName(string modelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetByName", ReplyAction="http://tempuri.org/IModelService/GetByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Model>> GetByNameAsync(string modelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetByRegions", ReplyAction="http://tempuri.org/IModelService/GetByRegionsResponse")]
        System.Collections.Generic.List<Idea.Entities.Model> GetByRegions(System.Collections.Generic.List<Idea.Entities.Region> regions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelService/GetByRegions", ReplyAction="http://tempuri.org/IModelService/GetByRegionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Model>> GetByRegionsAsync(System.Collections.Generic.List<Idea.Entities.Region> regions);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelServiceChannel : Idea.Facade.ModelService.IModelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelServiceClient : System.ServiceModel.ClientBase<Idea.Facade.ModelService.IModelService>, Idea.Facade.ModelService.IModelService {
        
        public ModelServiceClient() {
        }
        
        public ModelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Idea.Entities.Model> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Model>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Idea.Entities.Model Get(int idModel) {
            return base.Channel.Get(idModel);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Model> GetAsync(int idModel) {
            return base.Channel.GetAsync(idModel);
        }
        
        public Idea.Entities.Model Save(Idea.Entities.Model model) {
            return base.Channel.Save(model);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Model> SaveAsync(Idea.Entities.Model model) {
            return base.Channel.SaveAsync(model);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Model> GetByRegion(int idRegion) {
            return base.Channel.GetByRegion(idRegion);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Model>> GetByRegionAsync(int idRegion) {
            return base.Channel.GetByRegionAsync(idRegion);
        }
        
        public void Delete(Idea.Entities.Model model) {
            base.Channel.Delete(model);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Idea.Entities.Model model) {
            return base.Channel.DeleteAsync(model);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Model> GetByName(string modelName) {
            return base.Channel.GetByName(modelName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Model>> GetByNameAsync(string modelName) {
            return base.Channel.GetByNameAsync(modelName);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Model> GetByRegions(System.Collections.Generic.List<Idea.Entities.Region> regions) {
            return base.Channel.GetByRegions(regions);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Model>> GetByRegionsAsync(System.Collections.Generic.List<Idea.Entities.Region> regions) {
            return base.Channel.GetByRegionsAsync(regions);
        }
    }
}
