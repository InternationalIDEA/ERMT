//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Idea.Facade.ModelFactorDataService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ModelFactorDataService.IModelFactorDataService")]
    public interface IModelFactorDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/Save", ReplyAction="http://tempuri.org/IModelFactorDataService/SaveResponse")]
        Idea.Entities.ModelFactorData Save(Idea.Entities.ModelFactorData modelFactorData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/Save", ReplyAction="http://tempuri.org/IModelFactorDataService/SaveResponse")]
        System.Threading.Tasks.Task<Idea.Entities.ModelFactorData> SaveAsync(Idea.Entities.ModelFactorData modelFactorData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetAvailableDateForPastedDataByModelFa" +
            "ctor", ReplyAction="http://tempuri.org/IModelFactorDataService/GetAvailableDateForPastedDataByModelFa" +
            "ctorResponse")]
        System.DateTime GetAvailableDateForPastedDataByModelFactor(int idModelFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetAvailableDateForPastedDataByModelFa" +
            "ctor", ReplyAction="http://tempuri.org/IModelFactorDataService/GetAvailableDateForPastedDataByModelFa" +
            "ctorResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetAvailableDateForPastedDataByModelFactorAsync(int idModelFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetAvailableDateForPastedDataByRegionA" +
            "ndModel", ReplyAction="http://tempuri.org/IModelFactorDataService/GetAvailableDateForPastedDataByRegionA" +
            "ndModelResponse")]
        System.DateTime GetAvailableDateForPastedDataByRegionAndModel(int idRegion, int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetAvailableDateForPastedDataByRegionA" +
            "ndModel", ReplyAction="http://tempuri.org/IModelFactorDataService/GetAvailableDateForPastedDataByRegionA" +
            "ndModelResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetAvailableDateForPastedDataByRegionAndModelAsync(int idRegion, int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetAll", ReplyAction="http://tempuri.org/IModelFactorDataService/GetAllResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetAll", ReplyAction="http://tempuri.org/IModelFactorDataService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/Get", ReplyAction="http://tempuri.org/IModelFactorDataService/GetResponse")]
        Idea.Entities.ModelFactorData Get(int idModelFactorData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/Get", ReplyAction="http://tempuri.org/IModelFactorDataService/GetResponse")]
        System.Threading.Tasks.Task<Idea.Entities.ModelFactorData> GetAsync(int idModelFactorData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByDateModelRegion", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByDateModelRegionResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByDateModelRegion(System.DateTime date, int idModel, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByDateModelRegion", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByDateModelRegionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByDateModelRegionAsync(System.DateTime date, int idModel, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByDateModelFactorRegion", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByDateModelFactorRegionResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByDateModelFactorRegion(System.DateTime date, int idModelFactor, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByDateModelFactorRegion", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByDateModelFactorRegionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByDateModelFactorRegionAsync(System.DateTime date, int idModelFactor, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByModelFactor", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByModelFactorResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByModelFactor(int idModelFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByModelFactor", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByModelFactorResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByModelFactorAsync(int idModelFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetMapData", ReplyAction="http://tempuri.org/IModelFactorDataService/GetMapDataResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetMapData(int idModelFactor, string regionsIds, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetMapData", ReplyAction="http://tempuri.org/IModelFactorDataService/GetMapDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetMapDataAsync(int idModelFactor, string regionsIds, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetBetweenDatesModelFactorRegion", ReplyAction="http://tempuri.org/IModelFactorDataService/GetBetweenDatesModelFactorRegionRespon" +
            "se")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetBetweenDatesModelFactorRegion(System.DateTime from, System.DateTime to, int idModelFactor, string regionsIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetBetweenDatesModelFactorRegion", ReplyAction="http://tempuri.org/IModelFactorDataService/GetBetweenDatesModelFactorRegionRespon" +
            "se")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetBetweenDatesModelFactorRegionAsync(System.DateTime from, System.DateTime to, int idModelFactor, string regionsIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetMinorDate", ReplyAction="http://tempuri.org/IModelFactorDataService/GetMinorDateResponse")]
        System.Nullable<System.DateTime> GetMinorDate(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetMinorDate", ReplyAction="http://tempuri.org/IModelFactorDataService/GetMinorDateResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetMinorDateAsync(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetMajorDate", ReplyAction="http://tempuri.org/IModelFactorDataService/GetMajorDateResponse")]
        System.Nullable<System.DateTime> GetMajorDate(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetMajorDate", ReplyAction="http://tempuri.org/IModelFactorDataService/GetMajorDateResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetMajorDateAsync(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetMaxLevelWithData", ReplyAction="http://tempuri.org/IModelFactorDataService/GetMaxLevelWithDataResponse")]
        int GetMaxLevelWithData(int idModelFactor, int idRegion, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetMaxLevelWithData", ReplyAction="http://tempuri.org/IModelFactorDataService/GetMaxLevelWithDataResponse")]
        System.Threading.Tasks.Task<int> GetMaxLevelWithDataAsync(int idModelFactor, int idRegion, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetModelFactorLastDate", ReplyAction="http://tempuri.org/IModelFactorDataService/GetModelFactorLastDateResponse")]
        Idea.Entities.ModelFactorData GetModelFactorLastDate(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetModelFactorLastDate", ReplyAction="http://tempuri.org/IModelFactorDataService/GetModelFactorLastDateResponse")]
        System.Threading.Tasks.Task<Idea.Entities.ModelFactorData> GetModelFactorLastDateAsync(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetModelFactorWithDataAvailable", ReplyAction="http://tempuri.org/IModelFactorDataService/GetModelFactorWithDataAvailableRespons" +
            "e")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetModelFactorWithDataAvailable(int idModel, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetModelFactorWithDataAvailable", ReplyAction="http://tempuri.org/IModelFactorDataService/GetModelFactorWithDataAvailableRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetModelFactorWithDataAvailableAsync(int idModel, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByRegion", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByRegionResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByRegion(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByRegion", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByRegionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByRegionAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByModelFactorIdAndDate", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByModelFactorIdAndDateResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByModelFactorIdAndDate(int idModelFactor, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetByModelFactorIdAndDate", ReplyAction="http://tempuri.org/IModelFactorDataService/GetByModelFactorIdAndDateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByModelFactorIdAndDateAsync(int idModelFactor, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/Delete", ReplyAction="http://tempuri.org/IModelFactorDataService/DeleteResponse")]
        void Delete(Idea.Entities.ModelFactorData modelfactordata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/Delete", ReplyAction="http://tempuri.org/IModelFactorDataService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Idea.Entities.ModelFactorData modelfactordata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetRegionsWithData", ReplyAction="http://tempuri.org/IModelFactorDataService/GetRegionsWithDataResponse")]
        System.Collections.Generic.List<Idea.Entities.Region> GetRegionsWithData(System.DateTime dateFrom, System.DateTime dateTo, System.Collections.Generic.List<Idea.Entities.ModelFactor> modelFactors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelFactorDataService/GetRegionsWithData", ReplyAction="http://tempuri.org/IModelFactorDataService/GetRegionsWithDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetRegionsWithDataAsync(System.DateTime dateFrom, System.DateTime dateTo, System.Collections.Generic.List<Idea.Entities.ModelFactor> modelFactors);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelFactorDataServiceChannel : Idea.Facade.ModelFactorDataService.IModelFactorDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelFactorDataServiceClient : System.ServiceModel.ClientBase<Idea.Facade.ModelFactorDataService.IModelFactorDataService>, Idea.Facade.ModelFactorDataService.IModelFactorDataService {
        
        public ModelFactorDataServiceClient() {
        }
        
        public ModelFactorDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModelFactorDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelFactorDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelFactorDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Idea.Entities.ModelFactorData Save(Idea.Entities.ModelFactorData modelFactorData) {
            return base.Channel.Save(modelFactorData);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.ModelFactorData> SaveAsync(Idea.Entities.ModelFactorData modelFactorData) {
            return base.Channel.SaveAsync(modelFactorData);
        }
        
        public System.DateTime GetAvailableDateForPastedDataByModelFactor(int idModelFactor) {
            return base.Channel.GetAvailableDateForPastedDataByModelFactor(idModelFactor);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetAvailableDateForPastedDataByModelFactorAsync(int idModelFactor) {
            return base.Channel.GetAvailableDateForPastedDataByModelFactorAsync(idModelFactor);
        }
        
        public System.DateTime GetAvailableDateForPastedDataByRegionAndModel(int idRegion, int idModel) {
            return base.Channel.GetAvailableDateForPastedDataByRegionAndModel(idRegion, idModel);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetAvailableDateForPastedDataByRegionAndModelAsync(int idRegion, int idModel) {
            return base.Channel.GetAvailableDateForPastedDataByRegionAndModelAsync(idRegion, idModel);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Idea.Entities.ModelFactorData Get(int idModelFactorData) {
            return base.Channel.Get(idModelFactorData);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.ModelFactorData> GetAsync(int idModelFactorData) {
            return base.Channel.GetAsync(idModelFactorData);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByDateModelRegion(System.DateTime date, int idModel, int idRegion) {
            return base.Channel.GetByDateModelRegion(date, idModel, idRegion);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByDateModelRegionAsync(System.DateTime date, int idModel, int idRegion) {
            return base.Channel.GetByDateModelRegionAsync(date, idModel, idRegion);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByDateModelFactorRegion(System.DateTime date, int idModelFactor, int idRegion) {
            return base.Channel.GetByDateModelFactorRegion(date, idModelFactor, idRegion);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByDateModelFactorRegionAsync(System.DateTime date, int idModelFactor, int idRegion) {
            return base.Channel.GetByDateModelFactorRegionAsync(date, idModelFactor, idRegion);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByModelFactor(int idModelFactor) {
            return base.Channel.GetByModelFactor(idModelFactor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByModelFactorAsync(int idModelFactor) {
            return base.Channel.GetByModelFactorAsync(idModelFactor);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetMapData(int idModelFactor, string regionsIds, System.DateTime from, System.DateTime to) {
            return base.Channel.GetMapData(idModelFactor, regionsIds, from, to);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetMapDataAsync(int idModelFactor, string regionsIds, System.DateTime from, System.DateTime to) {
            return base.Channel.GetMapDataAsync(idModelFactor, regionsIds, from, to);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetBetweenDatesModelFactorRegion(System.DateTime from, System.DateTime to, int idModelFactor, string regionsIds) {
            return base.Channel.GetBetweenDatesModelFactorRegion(from, to, idModelFactor, regionsIds);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetBetweenDatesModelFactorRegionAsync(System.DateTime from, System.DateTime to, int idModelFactor, string regionsIds) {
            return base.Channel.GetBetweenDatesModelFactorRegionAsync(from, to, idModelFactor, regionsIds);
        }
        
        public System.Nullable<System.DateTime> GetMinorDate(int idModel) {
            return base.Channel.GetMinorDate(idModel);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetMinorDateAsync(int idModel) {
            return base.Channel.GetMinorDateAsync(idModel);
        }
        
        public System.Nullable<System.DateTime> GetMajorDate(int idModel) {
            return base.Channel.GetMajorDate(idModel);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetMajorDateAsync(int idModel) {
            return base.Channel.GetMajorDateAsync(idModel);
        }
        
        public int GetMaxLevelWithData(int idModelFactor, int idRegion, System.DateTime from, System.DateTime to) {
            return base.Channel.GetMaxLevelWithData(idModelFactor, idRegion, from, to);
        }
        
        public System.Threading.Tasks.Task<int> GetMaxLevelWithDataAsync(int idModelFactor, int idRegion, System.DateTime from, System.DateTime to) {
            return base.Channel.GetMaxLevelWithDataAsync(idModelFactor, idRegion, from, to);
        }
        
        public Idea.Entities.ModelFactorData GetModelFactorLastDate(int idModel) {
            return base.Channel.GetModelFactorLastDate(idModel);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.ModelFactorData> GetModelFactorLastDateAsync(int idModel) {
            return base.Channel.GetModelFactorLastDateAsync(idModel);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetModelFactorWithDataAvailable(int idModel, int idRegion) {
            return base.Channel.GetModelFactorWithDataAvailable(idModel, idRegion);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetModelFactorWithDataAvailableAsync(int idModel, int idRegion) {
            return base.Channel.GetModelFactorWithDataAvailableAsync(idModel, idRegion);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByRegion(int idRegion) {
            return base.Channel.GetByRegion(idRegion);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByRegionAsync(int idRegion) {
            return base.Channel.GetByRegionAsync(idRegion);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelFactorData> GetByModelFactorIdAndDate(int idModelFactor, System.DateTime date) {
            return base.Channel.GetByModelFactorIdAndDate(idModelFactor, date);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelFactorData>> GetByModelFactorIdAndDateAsync(int idModelFactor, System.DateTime date) {
            return base.Channel.GetByModelFactorIdAndDateAsync(idModelFactor, date);
        }
        
        public void Delete(Idea.Entities.ModelFactorData modelfactordata) {
            base.Channel.Delete(modelfactordata);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Idea.Entities.ModelFactorData modelfactordata) {
            return base.Channel.DeleteAsync(modelfactordata);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Region> GetRegionsWithData(System.DateTime dateFrom, System.DateTime dateTo, System.Collections.Generic.List<Idea.Entities.ModelFactor> modelFactors) {
            return base.Channel.GetRegionsWithData(dateFrom, dateTo, modelFactors);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetRegionsWithDataAsync(System.DateTime dateFrom, System.DateTime dateTo, System.Collections.Generic.List<Idea.Entities.ModelFactor> modelFactors) {
            return base.Channel.GetRegionsWithDataAsync(dateFrom, dateTo, modelFactors);
        }
    }
}
