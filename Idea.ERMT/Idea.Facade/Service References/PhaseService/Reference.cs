//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Idea.Facade.PhaseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhaseService.IPhaseService")]
    public interface IPhaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhaseService/GetAll", ReplyAction="http://tempuri.org/IPhaseService/GetAllResponse")]
        System.Collections.Generic.List<Idea.Entities.Phase> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhaseService/GetAll", ReplyAction="http://tempuri.org/IPhaseService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Phase>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhaseService/Save", ReplyAction="http://tempuri.org/IPhaseService/SaveResponse")]
        Idea.Entities.Phase Save(Idea.Entities.Phase phase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhaseService/Save", ReplyAction="http://tempuri.org/IPhaseService/SaveResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Phase> SaveAsync(Idea.Entities.Phase phase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhaseService/GenerateAllFiles", ReplyAction="http://tempuri.org/IPhaseService/GenerateAllFilesResponse")]
        void GenerateAllFiles(Idea.Entities.Phase phase, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhaseService/GenerateAllFiles", ReplyAction="http://tempuri.org/IPhaseService/GenerateAllFilesResponse")]
        System.Threading.Tasks.Task GenerateAllFilesAsync(Idea.Entities.Phase phase, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhaseService/Get", ReplyAction="http://tempuri.org/IPhaseService/GetResponse")]
        Idea.Entities.Phase Get(int idPhase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPhaseService/Get", ReplyAction="http://tempuri.org/IPhaseService/GetResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Phase> GetAsync(int idPhase);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhaseServiceChannel : Idea.Facade.PhaseService.IPhaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhaseServiceClient : System.ServiceModel.ClientBase<Idea.Facade.PhaseService.IPhaseService>, Idea.Facade.PhaseService.IPhaseService {
        
        public PhaseServiceClient() {
        }
        
        public PhaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Idea.Entities.Phase> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Phase>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Idea.Entities.Phase Save(Idea.Entities.Phase phase) {
            return base.Channel.Save(phase);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Phase> SaveAsync(Idea.Entities.Phase phase) {
            return base.Channel.SaveAsync(phase);
        }
        
        public void GenerateAllFiles(Idea.Entities.Phase phase, string culture) {
            base.Channel.GenerateAllFiles(phase, culture);
        }
        
        public System.Threading.Tasks.Task GenerateAllFilesAsync(Idea.Entities.Phase phase, string culture) {
            return base.Channel.GenerateAllFilesAsync(phase, culture);
        }
        
        public Idea.Entities.Phase Get(int idPhase) {
            return base.Channel.Get(idPhase);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Phase> GetAsync(int idPhase) {
            return base.Channel.GetAsync(idPhase);
        }
    }
}
