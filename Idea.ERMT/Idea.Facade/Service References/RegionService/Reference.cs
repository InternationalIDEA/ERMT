//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Idea.Facade.RegionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RegionService.IRegionService")]
    public interface IRegionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetAll", ReplyAction="http://tempuri.org/IRegionService/GetAllResponse")]
        System.Collections.Generic.List<Idea.Entities.Region> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetAll", ReplyAction="http://tempuri.org/IRegionService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetChilds", ReplyAction="http://tempuri.org/IRegionService/GetChildsResponse")]
        System.Collections.Generic.List<Idea.Entities.Region> GetChilds(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetChilds", ReplyAction="http://tempuri.org/IRegionService/GetChildsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetChildsAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/Get", ReplyAction="http://tempuri.org/IRegionService/GetResponse")]
        Idea.Entities.Region Get(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/Get", ReplyAction="http://tempuri.org/IRegionService/GetResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Region> GetAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/Save", ReplyAction="http://tempuri.org/IRegionService/SaveResponse")]
        Idea.Entities.Region Save(Idea.Entities.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/Save", ReplyAction="http://tempuri.org/IRegionService/SaveResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Region> SaveAsync(Idea.Entities.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/Delete", ReplyAction="http://tempuri.org/IRegionService/DeleteResponse")]
        void Delete(Idea.Entities.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/Delete", ReplyAction="http://tempuri.org/IRegionService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Idea.Entities.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetAllChilds", ReplyAction="http://tempuri.org/IRegionService/GetAllChildsResponse")]
        System.Collections.Generic.List<Idea.Entities.Region> GetAllChilds(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetAllChilds", ReplyAction="http://tempuri.org/IRegionService/GetAllChildsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetAllChildsAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetChildsAtLevel", ReplyAction="http://tempuri.org/IRegionService/GetChildsAtLevelResponse")]
        System.Collections.Generic.List<Idea.Entities.Region> GetChildsAtLevel(int idRegion, int level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetChildsAtLevel", ReplyAction="http://tempuri.org/IRegionService/GetChildsAtLevelResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetChildsAtLevelAsync(int idRegion, int level);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetRegionLevel", ReplyAction="http://tempuri.org/IRegionService/GetRegionLevelResponse")]
        int GetRegionLevel(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetRegionLevel", ReplyAction="http://tempuri.org/IRegionService/GetRegionLevelResponse")]
        System.Threading.Tasks.Task<int> GetRegionLevelAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetWorld", ReplyAction="http://tempuri.org/IRegionService/GetWorldResponse")]
        Idea.Entities.Region GetWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetWorld", ReplyAction="http://tempuri.org/IRegionService/GetWorldResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Region> GetWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetRegionByShapeFileAndIndex", ReplyAction="http://tempuri.org/IRegionService/GetRegionByShapeFileAndIndexResponse")]
        Idea.Entities.Region GetRegionByShapeFileAndIndex(System.IO.FileInfo shapeFileInfo, int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetRegionByShapeFileAndIndex", ReplyAction="http://tempuri.org/IRegionService/GetRegionByShapeFileAndIndexResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Region> GetRegionByShapeFileAndIndexAsync(System.IO.FileInfo shapeFileInfo, int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetAllRelated", ReplyAction="http://tempuri.org/IRegionService/GetAllRelatedResponse")]
        System.Collections.Generic.List<Idea.Entities.Region> GetAllRelated(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetAllRelated", ReplyAction="http://tempuri.org/IRegionService/GetAllRelatedResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetAllRelatedAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetFeatureIDsToExclude", ReplyAction="http://tempuri.org/IRegionService/GetFeatureIDsToExcludeResponse")]
        string GetFeatureIDsToExclude(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegionService/GetFeatureIDsToExclude", ReplyAction="http://tempuri.org/IRegionService/GetFeatureIDsToExcludeResponse")]
        System.Threading.Tasks.Task<string> GetFeatureIDsToExcludeAsync(int idRegion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegionServiceChannel : Idea.Facade.RegionService.IRegionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegionServiceClient : System.ServiceModel.ClientBase<Idea.Facade.RegionService.IRegionService>, Idea.Facade.RegionService.IRegionService {
        
        public RegionServiceClient() {
        }
        
        public RegionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Idea.Entities.Region> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public System.Collections.Generic.List<Idea.Entities.Region> GetChilds(int idRegion) {
            return base.Channel.GetChilds(idRegion);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetChildsAsync(int idRegion) {
            return base.Channel.GetChildsAsync(idRegion);
        }
        
        public Idea.Entities.Region Get(int idRegion) {
            return base.Channel.Get(idRegion);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Region> GetAsync(int idRegion) {
            return base.Channel.GetAsync(idRegion);
        }
        
        public Idea.Entities.Region Save(Idea.Entities.Region region) {
            return base.Channel.Save(region);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Region> SaveAsync(Idea.Entities.Region region) {
            return base.Channel.SaveAsync(region);
        }
        
        public void Delete(Idea.Entities.Region region) {
            base.Channel.Delete(region);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Idea.Entities.Region region) {
            return base.Channel.DeleteAsync(region);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Region> GetAllChilds(int idRegion) {
            return base.Channel.GetAllChilds(idRegion);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetAllChildsAsync(int idRegion) {
            return base.Channel.GetAllChildsAsync(idRegion);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Region> GetChildsAtLevel(int idRegion, int level) {
            return base.Channel.GetChildsAtLevel(idRegion, level);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetChildsAtLevelAsync(int idRegion, int level) {
            return base.Channel.GetChildsAtLevelAsync(idRegion, level);
        }
        
        public int GetRegionLevel(int idRegion) {
            return base.Channel.GetRegionLevel(idRegion);
        }
        
        public System.Threading.Tasks.Task<int> GetRegionLevelAsync(int idRegion) {
            return base.Channel.GetRegionLevelAsync(idRegion);
        }
        
        public Idea.Entities.Region GetWorld() {
            return base.Channel.GetWorld();
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Region> GetWorldAsync() {
            return base.Channel.GetWorldAsync();
        }
        
        public Idea.Entities.Region GetRegionByShapeFileAndIndex(System.IO.FileInfo shapeFileInfo, int index) {
            return base.Channel.GetRegionByShapeFileAndIndex(shapeFileInfo, index);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Region> GetRegionByShapeFileAndIndexAsync(System.IO.FileInfo shapeFileInfo, int index) {
            return base.Channel.GetRegionByShapeFileAndIndexAsync(shapeFileInfo, index);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Region> GetAllRelated(int idRegion) {
            return base.Channel.GetAllRelated(idRegion);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetAllRelatedAsync(int idRegion) {
            return base.Channel.GetAllRelatedAsync(idRegion);
        }
        
        public string GetFeatureIDsToExclude(int idRegion) {
            return base.Channel.GetFeatureIDsToExclude(idRegion);
        }
        
        public System.Threading.Tasks.Task<string> GetFeatureIDsToExcludeAsync(int idRegion) {
            return base.Channel.GetFeatureIDsToExcludeAsync(idRegion);
        }
    }
}
