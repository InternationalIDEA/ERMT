//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Idea.Facade.DocumentService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DocumentService.IDocumentService")]
    public interface IDocumentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetAll", ReplyAction="http://tempuri.org/IDocumentService/GetAllResponse")]
        System.Collections.Generic.List<Idea.Entities.Document> GetAll(string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetAll", ReplyAction="http://tempuri.org/IDocumentService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Document>> GetAllAsync(string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetCurrentModelFactors", ReplyAction="http://tempuri.org/IDocumentService/GetCurrentModelFactorsResponse")]
        System.Collections.Generic.List<Idea.Entities.Document> GetCurrentModelFactors(int modelId, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetCurrentModelFactors", ReplyAction="http://tempuri.org/IDocumentService/GetCurrentModelFactorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Document>> GetCurrentModelFactorsAsync(int modelId, string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentByFactor", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentByFactorResponse")]
        Idea.Entities.Document GetDocumentByFactor(Idea.Entities.Factor factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentByFactor", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentByFactorResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Document> GetDocumentByFactorAsync(Idea.Entities.Factor factor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Save", ReplyAction="http://tempuri.org/IDocumentService/SaveResponse")]
        void Save(Idea.Entities.Document document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Save", ReplyAction="http://tempuri.org/IDocumentService/SaveResponse")]
        System.Threading.Tasks.Task SaveAsync(Idea.Entities.Document document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Delete", ReplyAction="http://tempuri.org/IDocumentService/DeleteResponse")]
        void Delete(Idea.Entities.Document document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Delete", ReplyAction="http://tempuri.org/IDocumentService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Idea.Entities.Document document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Export", ReplyAction="http://tempuri.org/IDocumentService/ExportResponse")]
        Idea.Entities.Document Export(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Export", ReplyAction="http://tempuri.org/IDocumentService/ExportResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Document> ExportAsync(int idModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Import", ReplyAction="http://tempuri.org/IDocumentService/ImportResponse")]
        System.Collections.Generic.List<string> Import(Idea.Entities.Document model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/Import", ReplyAction="http://tempuri.org/IDocumentService/ImportResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> ImportAsync(Idea.Entities.Document model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/BackupApplicationData", ReplyAction="http://tempuri.org/IDocumentService/BackupApplicationDataResponse")]
        Idea.Entities.Document BackupApplicationData(bool backupDB, bool backupFiles, bool backupShapeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/BackupApplicationData", ReplyAction="http://tempuri.org/IDocumentService/BackupApplicationDataResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Document> BackupApplicationDataAsync(bool backupDB, bool backupFiles, bool backupShapeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/RestoreApplicationData", ReplyAction="http://tempuri.org/IDocumentService/RestoreApplicationDataResponse")]
        string RestoreApplicationData(Idea.Entities.Document doc, bool restoreDB, bool restoreFiles, bool restoreShapeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/RestoreApplicationData", ReplyAction="http://tempuri.org/IDocumentService/RestoreApplicationDataResponse")]
        System.Threading.Tasks.Task<string> RestoreApplicationDataAsync(Idea.Entities.Document doc, bool restoreDB, bool restoreFiles, bool restoreShapeFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentTemplate", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentTemplateResponse")]
        Idea.Entities.Document GetDocumentTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetDocumentTemplate", ReplyAction="http://tempuri.org/IDocumentService/GetDocumentTemplateResponse")]
        System.Threading.Tasks.Task<Idea.Entities.Document> GetDocumentTemplateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetPMM", ReplyAction="http://tempuri.org/IDocumentService/GetPMMResponse")]
        System.Collections.Generic.List<Idea.Entities.Document> GetPMM(string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetPMM", ReplyAction="http://tempuri.org/IDocumentService/GetPMMResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Document>> GetPMMAsync(string culture);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/SaveShapeFileToServer", ReplyAction="http://tempuri.org/IDocumentService/SaveShapeFileToServerResponse")]
        string SaveShapeFileToServer(Idea.Entities.Document doc, Idea.Entities.Region region, Idea.Entities.ShapeFileERMTType shapeFileERMTType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/SaveShapeFileToServer", ReplyAction="http://tempuri.org/IDocumentService/SaveShapeFileToServerResponse")]
        System.Threading.Tasks.Task<string> SaveShapeFileToServerAsync(Idea.Entities.Document doc, Idea.Entities.Region region, Idea.Entities.ShapeFileERMTType shapeFileERMTType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetRegionShapefilesFromServer", ReplyAction="http://tempuri.org/IDocumentService/GetRegionShapefilesFromServerResponse")]
        System.Collections.Generic.List<Idea.Entities.Document> GetRegionShapefilesFromServer(Idea.Entities.Region region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentService/GetRegionShapefilesFromServer", ReplyAction="http://tempuri.org/IDocumentService/GetRegionShapefilesFromServerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Document>> GetRegionShapefilesFromServerAsync(Idea.Entities.Region region);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentServiceChannel : Idea.Facade.DocumentService.IDocumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentServiceClient : System.ServiceModel.ClientBase<Idea.Facade.DocumentService.IDocumentService>, Idea.Facade.DocumentService.IDocumentService {
        
        public DocumentServiceClient() {
        }
        
        public DocumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Idea.Entities.Document> GetAll(string culture) {
            return base.Channel.GetAll(culture);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Document>> GetAllAsync(string culture) {
            return base.Channel.GetAllAsync(culture);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Document> GetCurrentModelFactors(int modelId, string culture) {
            return base.Channel.GetCurrentModelFactors(modelId, culture);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Document>> GetCurrentModelFactorsAsync(int modelId, string culture) {
            return base.Channel.GetCurrentModelFactorsAsync(modelId, culture);
        }
        
        public Idea.Entities.Document GetDocumentByFactor(Idea.Entities.Factor factor) {
            return base.Channel.GetDocumentByFactor(factor);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Document> GetDocumentByFactorAsync(Idea.Entities.Factor factor) {
            return base.Channel.GetDocumentByFactorAsync(factor);
        }
        
        public void Save(Idea.Entities.Document document) {
            base.Channel.Save(document);
        }
        
        public System.Threading.Tasks.Task SaveAsync(Idea.Entities.Document document) {
            return base.Channel.SaveAsync(document);
        }
        
        public void Delete(Idea.Entities.Document document) {
            base.Channel.Delete(document);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Idea.Entities.Document document) {
            return base.Channel.DeleteAsync(document);
        }
        
        public Idea.Entities.Document Export(int idModel) {
            return base.Channel.Export(idModel);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Document> ExportAsync(int idModel) {
            return base.Channel.ExportAsync(idModel);
        }
        
        public System.Collections.Generic.List<string> Import(Idea.Entities.Document model) {
            return base.Channel.Import(model);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> ImportAsync(Idea.Entities.Document model) {
            return base.Channel.ImportAsync(model);
        }
        
        public Idea.Entities.Document BackupApplicationData(bool backupDB, bool backupFiles, bool backupShapeFiles) {
            return base.Channel.BackupApplicationData(backupDB, backupFiles, backupShapeFiles);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Document> BackupApplicationDataAsync(bool backupDB, bool backupFiles, bool backupShapeFiles) {
            return base.Channel.BackupApplicationDataAsync(backupDB, backupFiles, backupShapeFiles);
        }
        
        public string RestoreApplicationData(Idea.Entities.Document doc, bool restoreDB, bool restoreFiles, bool restoreShapeFiles) {
            return base.Channel.RestoreApplicationData(doc, restoreDB, restoreFiles, restoreShapeFiles);
        }
        
        public System.Threading.Tasks.Task<string> RestoreApplicationDataAsync(Idea.Entities.Document doc, bool restoreDB, bool restoreFiles, bool restoreShapeFiles) {
            return base.Channel.RestoreApplicationDataAsync(doc, restoreDB, restoreFiles, restoreShapeFiles);
        }
        
        public Idea.Entities.Document GetDocumentTemplate() {
            return base.Channel.GetDocumentTemplate();
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.Document> GetDocumentTemplateAsync() {
            return base.Channel.GetDocumentTemplateAsync();
        }
        
        public System.Collections.Generic.List<Idea.Entities.Document> GetPMM(string culture) {
            return base.Channel.GetPMM(culture);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Document>> GetPMMAsync(string culture) {
            return base.Channel.GetPMMAsync(culture);
        }
        
        public string SaveShapeFileToServer(Idea.Entities.Document doc, Idea.Entities.Region region, Idea.Entities.ShapeFileERMTType shapeFileERMTType) {
            return base.Channel.SaveShapeFileToServer(doc, region, shapeFileERMTType);
        }
        
        public System.Threading.Tasks.Task<string> SaveShapeFileToServerAsync(Idea.Entities.Document doc, Idea.Entities.Region region, Idea.Entities.ShapeFileERMTType shapeFileERMTType) {
            return base.Channel.SaveShapeFileToServerAsync(doc, region, shapeFileERMTType);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Document> GetRegionShapefilesFromServer(Idea.Entities.Region region) {
            return base.Channel.GetRegionShapefilesFromServer(region);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Document>> GetRegionShapefilesFromServerAsync(Idea.Entities.Region region) {
            return base.Channel.GetRegionShapefilesFromServerAsync(region);
        }
    }
}
