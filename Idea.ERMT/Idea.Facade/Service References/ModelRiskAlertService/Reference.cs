//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Idea.Facade.ModelRiskAlertService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ModelRiskAlertService.IModelRiskAlertService")]
    public interface IModelRiskAlertService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetAll", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetAllResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelRiskAlert> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetAll", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlert>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetWithFilter", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetWithFilterResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelRiskAlert> GetWithFilter(System.Nullable<int> idModel, System.Collections.Generic.List<int> regions, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetWithFilter", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetWithFilterResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlert>> GetWithFilterAsync(System.Nullable<int> idModel, System.Collections.Generic.List<int> regions, System.Nullable<bool> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/Save", ReplyAction="http://tempuri.org/IModelRiskAlertService/SaveResponse")]
        Idea.Entities.ModelRiskAlert Save(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/Save", ReplyAction="http://tempuri.org/IModelRiskAlertService/SaveResponse")]
        System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlert> SaveAsync(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/Delete", ReplyAction="http://tempuri.org/IModelRiskAlertService/DeleteResponse")]
        void Delete(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/Delete", ReplyAction="http://tempuri.org/IModelRiskAlertService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertAttachment", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertAttachmentResponse")]
        Idea.Entities.ModelRiskAlertAttachment GetNewModelRiskAlertAttachment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertAttachment", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertAttachmentResponse")]
        System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlertAttachment> GetNewModelRiskAlertAttachmentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertPhase", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertPhaseResponse")]
        Idea.Entities.ModelRiskAlertPhase GetNewModelRiskAlertPhase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertPhase", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertPhaseResponse")]
        System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlertPhase> GetNewModelRiskAlertPhaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/SavePhase", ReplyAction="http://tempuri.org/IModelRiskAlertService/SavePhaseResponse")]
        void SavePhase(Idea.Entities.ModelRiskAlertPhase modelRiskAlertPhase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/SavePhase", ReplyAction="http://tempuri.org/IModelRiskAlertService/SavePhaseResponse")]
        System.Threading.Tasks.Task SavePhaseAsync(Idea.Entities.ModelRiskAlertPhase modelRiskAlertPhase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/SaveRegion", ReplyAction="http://tempuri.org/IModelRiskAlertService/SaveRegionResponse")]
        void SaveRegion(Idea.Entities.ModelRiskAlertRegion modelRiskAlertRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/SaveRegion", ReplyAction="http://tempuri.org/IModelRiskAlertService/SaveRegionResponse")]
        System.Threading.Tasks.Task SaveRegionAsync(Idea.Entities.ModelRiskAlertRegion modelRiskAlertRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/SaveAttachment", ReplyAction="http://tempuri.org/IModelRiskAlertService/SaveAttachmentResponse")]
        void SaveAttachment(Idea.Entities.ModelRiskAlertAttachment modelRiskAlertAttachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/SaveAttachment", ReplyAction="http://tempuri.org/IModelRiskAlertService/SaveAttachmentResponse")]
        System.Threading.Tasks.Task SaveAttachmentAsync(Idea.Entities.ModelRiskAlertAttachment modelRiskAlertAttachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertRegion", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertRegionResponse")]
        Idea.Entities.ModelRiskAlertRegion GetNewModelRiskAlertRegion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertRegion", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetNewModelRiskAlertRegionResponse")]
        System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlertRegion> GetNewModelRiskAlertRegionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetAllRegionsWithAlerts", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetAllRegionsWithAlertsResponse")]
        System.Collections.Generic.List<Idea.Entities.Region> GetAllRegionsWithAlerts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetAllRegionsWithAlerts", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetAllRegionsWithAlertsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetAllRegionsWithAlertsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/Get", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetResponse")]
        Idea.Entities.ModelRiskAlert Get(int idModelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/Get", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetResponse")]
        System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlert> GetAsync(int idModelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetRegions", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetRegionsResponse")]
        System.Collections.Generic.List<Idea.Entities.Region> GetRegions(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetRegions", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetRegionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetRegionsAsync(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetPhases", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetPhasesResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelRiskAlertPhase> GetPhases(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetPhases", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetPhasesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlertPhase>> GetPhasesAsync(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetModelRiskAlertRegions", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetModelRiskAlertRegionsResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelRiskAlertRegion> GetModelRiskAlertRegions(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetModelRiskAlertRegions", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetModelRiskAlertRegionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlertRegion>> GetModelRiskAlertRegionsAsync(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetModelRiskAlertAttachments", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetModelRiskAlertAttachmentsResponse")]
        System.Collections.Generic.List<Idea.Entities.ModelRiskAlertAttachment> GetModelRiskAlertAttachments(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/GetModelRiskAlertAttachments", ReplyAction="http://tempuri.org/IModelRiskAlertService/GetModelRiskAlertAttachmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlertAttachment>> GetModelRiskAlertAttachmentsAsync(Idea.Entities.ModelRiskAlert modelRiskAlert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/DeletePhase", ReplyAction="http://tempuri.org/IModelRiskAlertService/DeletePhaseResponse")]
        void DeletePhase(Idea.Entities.ModelRiskAlertPhase modelRiskAlertPhase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/DeletePhase", ReplyAction="http://tempuri.org/IModelRiskAlertService/DeletePhaseResponse")]
        System.Threading.Tasks.Task DeletePhaseAsync(Idea.Entities.ModelRiskAlertPhase modelRiskAlertPhase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/DeleteRegion", ReplyAction="http://tempuri.org/IModelRiskAlertService/DeleteRegionResponse")]
        void DeleteRegion(Idea.Entities.ModelRiskAlertRegion modelRiskAlertRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/DeleteRegion", ReplyAction="http://tempuri.org/IModelRiskAlertService/DeleteRegionResponse")]
        System.Threading.Tasks.Task DeleteRegionAsync(Idea.Entities.ModelRiskAlertRegion modelRiskAlertRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/DeleteAttachment", ReplyAction="http://tempuri.org/IModelRiskAlertService/DeleteAttachmentResponse")]
        void DeleteAttachment(Idea.Entities.ModelRiskAlertAttachment modelRiskAlertAttachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IModelRiskAlertService/DeleteAttachment", ReplyAction="http://tempuri.org/IModelRiskAlertService/DeleteAttachmentResponse")]
        System.Threading.Tasks.Task DeleteAttachmentAsync(Idea.Entities.ModelRiskAlertAttachment modelRiskAlertAttachment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IModelRiskAlertServiceChannel : Idea.Facade.ModelRiskAlertService.IModelRiskAlertService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModelRiskAlertServiceClient : System.ServiceModel.ClientBase<Idea.Facade.ModelRiskAlertService.IModelRiskAlertService>, Idea.Facade.ModelRiskAlertService.IModelRiskAlertService {
        
        public ModelRiskAlertServiceClient() {
        }
        
        public ModelRiskAlertServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ModelRiskAlertServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelRiskAlertServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ModelRiskAlertServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelRiskAlert> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlert>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelRiskAlert> GetWithFilter(System.Nullable<int> idModel, System.Collections.Generic.List<int> regions, System.Nullable<bool> isActive) {
            return base.Channel.GetWithFilter(idModel, regions, isActive);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlert>> GetWithFilterAsync(System.Nullable<int> idModel, System.Collections.Generic.List<int> regions, System.Nullable<bool> isActive) {
            return base.Channel.GetWithFilterAsync(idModel, regions, isActive);
        }
        
        public Idea.Entities.ModelRiskAlert Save(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.Save(modelRiskAlert);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlert> SaveAsync(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.SaveAsync(modelRiskAlert);
        }
        
        public void Delete(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            base.Channel.Delete(modelRiskAlert);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.DeleteAsync(modelRiskAlert);
        }
        
        public Idea.Entities.ModelRiskAlertAttachment GetNewModelRiskAlertAttachment() {
            return base.Channel.GetNewModelRiskAlertAttachment();
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlertAttachment> GetNewModelRiskAlertAttachmentAsync() {
            return base.Channel.GetNewModelRiskAlertAttachmentAsync();
        }
        
        public Idea.Entities.ModelRiskAlertPhase GetNewModelRiskAlertPhase() {
            return base.Channel.GetNewModelRiskAlertPhase();
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlertPhase> GetNewModelRiskAlertPhaseAsync() {
            return base.Channel.GetNewModelRiskAlertPhaseAsync();
        }
        
        public void SavePhase(Idea.Entities.ModelRiskAlertPhase modelRiskAlertPhase) {
            base.Channel.SavePhase(modelRiskAlertPhase);
        }
        
        public System.Threading.Tasks.Task SavePhaseAsync(Idea.Entities.ModelRiskAlertPhase modelRiskAlertPhase) {
            return base.Channel.SavePhaseAsync(modelRiskAlertPhase);
        }
        
        public void SaveRegion(Idea.Entities.ModelRiskAlertRegion modelRiskAlertRegion) {
            base.Channel.SaveRegion(modelRiskAlertRegion);
        }
        
        public System.Threading.Tasks.Task SaveRegionAsync(Idea.Entities.ModelRiskAlertRegion modelRiskAlertRegion) {
            return base.Channel.SaveRegionAsync(modelRiskAlertRegion);
        }
        
        public void SaveAttachment(Idea.Entities.ModelRiskAlertAttachment modelRiskAlertAttachment) {
            base.Channel.SaveAttachment(modelRiskAlertAttachment);
        }
        
        public System.Threading.Tasks.Task SaveAttachmentAsync(Idea.Entities.ModelRiskAlertAttachment modelRiskAlertAttachment) {
            return base.Channel.SaveAttachmentAsync(modelRiskAlertAttachment);
        }
        
        public Idea.Entities.ModelRiskAlertRegion GetNewModelRiskAlertRegion() {
            return base.Channel.GetNewModelRiskAlertRegion();
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlertRegion> GetNewModelRiskAlertRegionAsync() {
            return base.Channel.GetNewModelRiskAlertRegionAsync();
        }
        
        public System.Collections.Generic.List<Idea.Entities.Region> GetAllRegionsWithAlerts() {
            return base.Channel.GetAllRegionsWithAlerts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetAllRegionsWithAlertsAsync() {
            return base.Channel.GetAllRegionsWithAlertsAsync();
        }
        
        public Idea.Entities.ModelRiskAlert Get(int idModelRiskAlert) {
            return base.Channel.Get(idModelRiskAlert);
        }
        
        public System.Threading.Tasks.Task<Idea.Entities.ModelRiskAlert> GetAsync(int idModelRiskAlert) {
            return base.Channel.GetAsync(idModelRiskAlert);
        }
        
        public System.Collections.Generic.List<Idea.Entities.Region> GetRegions(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.GetRegions(modelRiskAlert);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.Region>> GetRegionsAsync(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.GetRegionsAsync(modelRiskAlert);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelRiskAlertPhase> GetPhases(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.GetPhases(modelRiskAlert);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlertPhase>> GetPhasesAsync(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.GetPhasesAsync(modelRiskAlert);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelRiskAlertRegion> GetModelRiskAlertRegions(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.GetModelRiskAlertRegions(modelRiskAlert);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlertRegion>> GetModelRiskAlertRegionsAsync(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.GetModelRiskAlertRegionsAsync(modelRiskAlert);
        }
        
        public System.Collections.Generic.List<Idea.Entities.ModelRiskAlertAttachment> GetModelRiskAlertAttachments(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.GetModelRiskAlertAttachments(modelRiskAlert);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Idea.Entities.ModelRiskAlertAttachment>> GetModelRiskAlertAttachmentsAsync(Idea.Entities.ModelRiskAlert modelRiskAlert) {
            return base.Channel.GetModelRiskAlertAttachmentsAsync(modelRiskAlert);
        }
        
        public void DeletePhase(Idea.Entities.ModelRiskAlertPhase modelRiskAlertPhase) {
            base.Channel.DeletePhase(modelRiskAlertPhase);
        }
        
        public System.Threading.Tasks.Task DeletePhaseAsync(Idea.Entities.ModelRiskAlertPhase modelRiskAlertPhase) {
            return base.Channel.DeletePhaseAsync(modelRiskAlertPhase);
        }
        
        public void DeleteRegion(Idea.Entities.ModelRiskAlertRegion modelRiskAlertRegion) {
            base.Channel.DeleteRegion(modelRiskAlertRegion);
        }
        
        public System.Threading.Tasks.Task DeleteRegionAsync(Idea.Entities.ModelRiskAlertRegion modelRiskAlertRegion) {
            return base.Channel.DeleteRegionAsync(modelRiskAlertRegion);
        }
        
        public void DeleteAttachment(Idea.Entities.ModelRiskAlertAttachment modelRiskAlertAttachment) {
            base.Channel.DeleteAttachment(modelRiskAlertAttachment);
        }
        
        public System.Threading.Tasks.Task DeleteAttachmentAsync(Idea.Entities.ModelRiskAlertAttachment modelRiskAlertAttachment) {
            return base.Channel.DeleteAttachmentAsync(modelRiskAlertAttachment);
        }
    }
}
